#ifndef _CHARACTER_
#define _CHARACTER_
#include<iostream>
using namespace std;
#include<fstream>
#ifdef MACOSX
#include<GLUT/glut.h>
#else
#include<GL/glut.h>
#endif
#include<math.h>
#include<stdlib.h>
#include<string.h>
#include<sys/time.h>
#include"texture.h"

class Character {
 public:
   bool direction = 0;
   bool show = 0;
   int xposition;
   int yposition;
   int width;
   int height;
   int name;
   Character(int n, int x, int y, int w, int h);
   int getxposition();
   int getyposition() {
     return yposition; } 
   int getheight(){
     return height;}
   int getwidth(){
     return width;}
   bool getdirection(){
     return direction;}
   bool getshow(){
     return show;}
   void updatedirection(bool d){
     direction = d;}
   void updatexposition(int x) {
     xposition = x;}
   void updateyposition(int y){
     yposition = y;}
   void updatetextureID(int textureID){
     name = textureID;}
   void updateshow(bool s){
     show = s;
   }
   void draw();
   void remove() {
     show = 1;
     }
   bool checkcolide(int x, int y, int w, int h);
};

class Player : public Character {
 public:
  Player(int, int, int, int, int);
  int health = 5;
  int velocity = 0;
  bool onGround = 1; 
  void moveLeft() {
    --xposition; }
  void moveRight() {
    ++xposition; }
  void jump() {
    velocity =5; }
  int getVelocity() {
    return velocity; }
   };

class Squatter : public Character {
  int x1;
  int x2;
 public: 
  Squatter(int, int, int, int, int, int, int);
  void move() {
    if (xposition == x1)
      direction = 1;
    if (xposition == x2)
      direction = 0;
    if (direction == 1)
      xposition = xposition +2;
    if (direction == 0)
      xposition = xposition -2; } };

class PewPew : public Character {
  PewPew(int, int, int, int, int);
  void checkPlayerPos (int Playerx) {
    if (Playerx < xposition)
      direction = 0;
    if (Playerx > xposition)
      direction = 1;
     }
};

class Platform : public Character{
 public:
  Platform(int, int, int, int, int);
  bool checktouch(int, int, int, int);
};

class Bullet : public Character{
 public:
  int fired = 0;
  Bullet(int, int, int, int, int);
  void move(){
    if (direction == 0){
    xposition = xposition + 5;
    }
    if (direction == 1){
      xposition = xposition + 5;
    }
  }
  bool checkInMap(int width){
    if ((xposition + width) < 0){
      return false;
    }
    if (xposition > width){
      return false;
    }
    else return true;
  }
    
};


#endif
